ext {
    libraries = [:]
    versions = [:]
}

versions += [
        groovy    : '2.3.6',
        dropwizard: '0.6.2',
        logback   : '1.0.10',
]

libraries += [
        mavenSharedUtils    : 'org.apache.maven.shared:maven-shared-utils:0.4',
        groovy              : "org.codehaus.groovy:groovy:${versions.groovy}",
        groovyJson          : "org.codehaus.groovy:groovy-json:${versions.groovy}",
        mail                : 'javax.mail:mail:1.4.7',
        springContextSupport: 'org.springframework:spring-context-support:3.2.4.RELEASE',
        logger              : "ch.qos.logback:logback-classic:${versions.logback}",

        junit               : 'junit:junit:4.11',
        systemRules         : 'com.github.stefanbirkner:system-rules:1.6.0',
        asm                 : 'org.ow2.asm:asm:4.1',
        hamcrest            : 'org.hamcrest:hamcrest-library:1.3',
        jcommander          : 'com.beust:jcommander:1.32',
        dropwizardTesting   : "com.yammer.dropwizard:dropwizard-testing:${versions.dropwizard}",
]

libraries.dropwizard = ["com.yammer.dropwizard:dropwizard-core:${versions.dropwizard}",
                        'com.sun.jersey:jersey-client:1.17.1',
]

libraries.spock = ['org.spockframework:spock-core:0.7-groovy-2.0',
                   libraries.groovy,
                   'org.objenesis:objenesis:2.0',
                   'cglib:cglib-nodep:2.2'
]

allprojects {
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def req = details.requested
            // Replace groovy-all with groovy
            if (req.name == 'groovy-all' || req.name == 'groovy') {
                details.useTarget libraries.groovy
            }
            // Replace junit-dep with junit
            if (req.name == 'junit-dep') {
                details.useTarget libraries.junit
            }
            // Replace old/new asm with specific asm
            if (req.group == 'asm') {
                details.useTarget libraries.asm
            }
        }
    }
}
